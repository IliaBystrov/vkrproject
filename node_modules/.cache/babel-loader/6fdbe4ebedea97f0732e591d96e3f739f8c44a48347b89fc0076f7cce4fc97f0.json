{"ast":null,"code":"import _toConsumableArray from\"C:/Users/iliab/Desktop/vkrproject/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/iliab/Desktop/vkrproject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import QPool from'./qpoll';import{MainButtoms}from'./mainbuttons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var App=function App(){var _useState=useState([{id:0,question_type:'short',question_text:'sad',answer:[]},{id:1,question_type:'long',question_text:'szxczxcxc',answer:[]},{id:2,question_type:'one',question_text:'qwe',answer:['1','2','3']},{id:3,question_type:'many',question_text:'llkjl',answer:['1','2','3','4']}]),_useState2=_slicedToArray(_useState,2),items=_useState2[0],setValue=_useState2[1];var _useState3=useState([{id:0,title:'Shablon 1',link:'https://Shablon1',data:'01.02.2023'},{id:1,title:'Shablon 2',link:'https://Shablon2',data:'21.05.2023'}]),_useState4=_slicedToArray(_useState3,2),shablon_cards=_useState4[0],setCard=_useState4[1];//Метод для поиска шаблонов по совпадению с поисковой строкой и обновления списка\n//Работает, но нужно связать с бд\nvar ReloadCardList=function ReloadCardList(card_title){setCard(function(prevState){return[];});//Тут надо получить данные из бд и запихнуть их в cards\n//Get date from bd -> cards [{id: , title: , link: , data: }]\nvar cards=[{id:3,title:\"Title\",link:\"link\",data:\"02.02.2022\"},{id:4,title:\"Title2\",link:\"link\",data:\"02.02.2023\"}];cards.map(function(card){addcard(card.id,card.title,card.link,card.data);});};//Работает\nvar addcard=function addcard(c_id,c_title,c_link,c_data){var newcard={id:c_id,title:c_title,link:c_link,data:c_data};setCard(function(prevState){return[].concat(_toConsumableArray(prevState),[newcard]);});};//Добавляем вопрос\nvar additem=function additem(){var i=0;for(var j=0;j<items.length;j++){if(items[j].id>i){i=items[j].id;}}i++;var newitem={id:i,question_type:'',question_text:'',answer:[]};setValue(function(prevState){return[].concat(_toConsumableArray(prevState),[newitem]);});//Вывод для проверки\n//console.log(i);\n};//Удаляем вопрос\nvar deleteitem=function deleteitem(id){var count=items.length;if(count>1){setValue(function(prevState){var idx=prevState.findIndex(function(item){return item.id===id;});return[].concat(_toConsumableArray(prevState.slice(0,idx)),_toConsumableArray(prevState.slice(idx+1)));});//Для проверки\ncount--;}else{alert('Нельзя удалить единственный вопрос!');};//Для проверки\n//console.log(count);\n};//Получаем текст и варианты ответов на вопросы\nvar SetQuestion=function SetQuestion(id,type){var qtype=type;var qtext='';var qans=[];var a,j;var inputs=document.getElementsByName('question_area_'+id);for(j=0;j<inputs.length;j++){a=inputs[j];qtext=a.value;}if(qtype!=='short'||qtype!=='long'){inputs=document.getElementsByName('answer_area_'+id);for(j=0;j<inputs.length;j++){a=inputs[j];qans.push(a.value);}}var copy=Object.assign([],items);var idx=copy.findIndex(function(item){return item.id===id;});var newitem={id:id,question_type:qtype,question_text:qtext,answer:qans};copy[idx]=newitem;setValue(copy);/*console.log(qtype);\r\n        console.log(qtext);\r\n        console.log(qans);*/};//Поиск\n//Добавить запись в бд\nvar SaveShablon=function SaveShablon(){var S_title=document.getElementsByName(\"Shablon_title\").value;//Название шаблона\nvar S_type=document.getElementsByName(\"shablontype\").value;//Тип шаблона\n//Данные о вопросах шаблона беруться из items, ниже цикл для перебора элементов элементов\nvar items_copy=Object.assign([],items);for(var i=0;i<items_copy.length;i++){/*items_copy[i].id\r\n            items_copy[i].question_type\r\n            items_copy[i].question_text\r\n            items_copy[i].answer*/}console.log(items);};//Новый шаблон-очистить поле создания шаблона+\nvar NewShablon=function NewShablon(){setValue(function(prevState){return[];});var title=document.getElementById('shablon_title');title.value=\"\";var stype=document.getElementById(\"typeselect\");stype.value=\"public\";};//Копировать шаблон\nvar CopyShablon=function CopyShablon(id){var s_copy=Object.assign([],shablon_cards);var i_copy=[];var new_shablon;for(var i=0;i<s_copy.length;i++){if(s_copy[i].id===id){new_shablon={id:s_copy[i].id,title:s_copy[i].title,link:s_copy[i].link,data:s_copy[i].data};break;}}console.log(new_shablon);//Здесь надо получить записи о вопросах данного шаблона\n//из бд и запихнуть их в i_copy, после чего записать\n//данные из new_shablon и i_copy в бд, если нельзя создать копию сразу на беке.\nvar title=document.getElementById(\"InSearch\");ReloadCardList(title.value);};//Удалить шаблон //Сюда надо подкрутить удаление шаблона\nvar DeleteShablon=function DeleteShablon(id){console.log(\"delete - \"+id);//Это для перезагрузки списка\nvar title=document.getElementById(\"InSearch\");ReloadCardList(title.value);};//Копировать ссылку на шаблон - работает\nvar CopyLink=function CopyLink(link){console.log(link);navigator.clipboard.writeText(link);};//Редактировать шаблон\nvar EditShablon=function EditShablon(id){setValue(function(prevState){return[];});//Получаем структуру из вопросов конкретного шаблона\n//в виде x = [{id: 1, question_type: '', question_text: '', answer: [] }]\nvar x=[];for(var j=0;j<x.length;j++){var newitem={id:x[j].id,question_type:x[j].question_type,question_text:x[j].question_text,answer:x[j].answer};setValue(function(prevState){return[].concat(_toConsumableArray(prevState),[newitem]);});}var title=document.getElementById('shablon_title');title.value=\"Название\";var stype=document.getElementById(\"typeselect\");stype.value=\"public\";};//Показать результаты\nvar ShowResult=function ShowResult(id){var block_result=document.getElementById('mainp');};return/*#__PURE__*/_jsxs(\"div\",{id:\"main_block_c\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"block1\",children:/*#__PURE__*/_jsx(MainButtoms,{NewShablon:NewShablon,List:shablon_cards,CopyShablon:CopyShablon,CopyLink:CopyLink,EditShablon:EditShablon,DeleteShablon:DeleteShablon})}),/*#__PURE__*/_jsx(\"div\",{id:\"block2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mainp\",id:\"mainp\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"shablon_title\",name:\"Shablon_title\",autoFocus:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0422\\u0438\\u043F \\u043E\\u043F\\u0440\\u043E\\u0441\\u0430\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"typeselect\",name:\"shablontype\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"public\",children:\"\\u041F\\u0443\\u0431\\u043B\\u0438\\u0447\\u043D\\u044B\\u0439\"}),/*#__PURE__*/_jsx(\"option\",{value:\"anon\",children:\"\\u0410\\u043D\\u043E\\u043D\\u0438\\u043C\\u043D\\u044B\\u0439\"})]}),items.map(function(item){return/*#__PURE__*/_jsx(QPool,{id:item.id,type:item.question_type,text:item.question_text,answ:item.answer,image_delete:require('../images/close.png'),onDeleted:deleteitem,setInfo:SetQuestion},item.id);}),/*#__PURE__*/_jsxs(\"button\",{id:\"addtask\",onClick:additem,children:[/*#__PURE__*/_jsx(\"img\",{src:require('../images/plus.png'),alt:\"add\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"})]}),/*#__PURE__*/_jsx(\"button\",{id:\"addtask\",onClick:SaveShablon,children:/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"})})]})})]});};","map":{"version":3,"names":["React","useState","QPool","MainButtoms","App","id","question_type","question_text","answer","items","setValue","title","link","data","shablon_cards","setCard","ReloadCardList","card_title","prevState","cards","map","card","addcard","c_id","c_title","c_link","c_data","newcard","additem","i","j","length","newitem","deleteitem","count","idx","findIndex","item","slice","alert","SetQuestion","type","qtype","qtext","qans","a","inputs","document","getElementsByName","value","push","copy","Object","assign","SaveShablon","S_title","S_type","items_copy","console","log","NewShablon","getElementById","stype","CopyShablon","s_copy","i_copy","new_shablon","DeleteShablon","CopyLink","navigator","clipboard","writeText","EditShablon","x","ShowResult","block_result","require"],"sources":["C:/Users/iliab/Desktop/vkrproject/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QPool from './qpoll';\r\nimport {MainButtoms} from './mainbuttons';\r\n\r\n\r\nexport const App = () => {\r\n\r\n    const [items, setValue] = useState([\r\n        {\r\n            id: 0,\r\n            question_type: 'short',\r\n            question_text: 'sad',\r\n            answer: []        \r\n        },\r\n        {\r\n            id: 1,\r\n            question_type: 'long',\r\n            question_text: 'szxczxcxc',\r\n            answer: []        \r\n        },\r\n        {\r\n            id: 2,\r\n            question_type: 'one',\r\n            question_text: 'qwe',\r\n            answer: ['1', '2', '3']        \r\n        },\r\n        {\r\n            id: 3,\r\n            question_type: 'many',\r\n            question_text: 'llkjl',\r\n            answer: ['1', '2', '3', '4']        \r\n        }\r\n    ]);\r\n\r\n    const  [shablon_cards, setCard] = useState([\r\n        {\r\n            id: 0,\r\n            title: 'Shablon 1',\r\n            link: 'https://Shablon1',\r\n            data: '01.02.2023'  \r\n        },\r\n        {\r\n            id: 1,\r\n            title: 'Shablon 2',\r\n            link: 'https://Shablon2',\r\n            data: '21.05.2023'  \r\n        }\r\n    ]);\r\n    \r\n    //Метод для поиска шаблонов по совпадению с поисковой строкой и обновления списка\r\n    //Работает, но нужно связать с бд\r\n    const ReloadCardList =(card_title)=>{\r\n        setCard((prevState) => []);\r\n        //Тут надо получить данные из бд и запихнуть их в cards\r\n        //Get date from bd -> cards [{id: , title: , link: , data: }]\r\n        const cards = [{id:3, title: \"Title\", link: \"link\", data: \"02.02.2022\"},\r\n        {id:4, title: \"Title2\", link: \"link\", data: \"02.02.2023\"}]\r\n\r\n        cards.map((card) => {\r\n            addcard(card.id, card.title, card.link, card.data);\r\n        })\r\n\r\n    };\r\n    //Работает\r\n    const addcard = (c_id, c_title, c_link, c_data) => {\r\n\r\n        var newcard = {\r\n            id: c_id,\r\n            title: c_title,\r\n            link: c_link,\r\n            data: c_data \r\n        };\r\n        setCard((prevState) => [...prevState, newcard]);\r\n    };\r\n\r\n\r\n    //Добавляем вопрос\r\n    const additem = () => {\r\n        let i = 0;\r\n        for(var j=0;j<items.length;j++){\r\n            if(items[j].id>i){\r\n                i=items[j].id;\r\n            }\r\n        }\r\n        i++;\r\n        var newitem = {\r\n            id: i,\r\n            question_type: '',\r\n            question_text: '',\r\n            answer: []\r\n        };\r\n        setValue((prevState) => [...prevState, newitem]);\r\n        //Вывод для проверки\r\n        //console.log(i);\r\n    };\r\n    //Удаляем вопрос\r\n    const deleteitem = (id) =>{\r\n        var count = items.length;\r\n        if(count > 1){\r\n            setValue((prevState) => {\r\n                const idx = prevState.findIndex((item) => item.id === id);\r\n                return[...prevState.slice(0,idx), ...prevState.slice(idx+1)];\r\n            });\r\n            //Для проверки\r\n            count--;\r\n        } \r\n        else{ \r\n            alert('Нельзя удалить единственный вопрос!');\r\n        };\r\n        //Для проверки\r\n        //console.log(count);\r\n    };\r\n    //Получаем текст и варианты ответов на вопросы\r\n    const SetQuestion = (id, type) =>{\r\n        var qtype = type;\r\n        var qtext ='';\r\n        var qans =[];\r\n        var a, j;\r\n        var inputs = document.getElementsByName('question_area_' + id);\r\n        for (j = 0; j < inputs.length; j++) {\r\n            a = inputs[j];\r\n            qtext = a.value;\r\n        }\r\n        if((qtype !== 'short') || (qtype !== 'long')){\r\n            inputs = document.getElementsByName('answer_area_' + id);\r\n            for (j = 0; j < inputs.length; j++) {\r\n                a = inputs[j];\r\n                qans.push(a.value);\r\n            }\r\n        }\r\n        var copy = Object.assign([], items);\r\n        var idx = copy.findIndex((item) => item.id === id);\r\n        var newitem={\r\n            id: id,\r\n            question_type: qtype,\r\n            question_text: qtext,\r\n            answer: qans\r\n        };\r\n        copy[idx]=newitem;\r\n        setValue(copy);\r\n\r\n        /*console.log(qtype);\r\n        console.log(qtext);\r\n        console.log(qans);*/\r\n    };\r\n    //Поиск\r\n    //Добавить запись в бд\r\n    const SaveShablon = () => {\r\n        var S_title = document.getElementsByName(\"Shablon_title\").value;//Название шаблона\r\n        var S_type = document.getElementsByName(\"shablontype\").value;//Тип шаблона\r\n        //Данные о вопросах шаблона беруться из items, ниже цикл для перебора элементов элементов\r\n        var items_copy = Object.assign([], items);\r\n        for(var i = 0; i<items_copy.length; i++){\r\n            /*items_copy[i].id\r\n            items_copy[i].question_type\r\n            items_copy[i].question_text\r\n            items_copy[i].answer*/\r\n        }\r\n        console.log(items);\r\n    };\r\n    //Новый шаблон-очистить поле создания шаблона+\r\n    const NewShablon =()=>{\r\n\r\n        setValue((prevState) => []);\r\n        let title = document.getElementById('shablon_title');\r\n        title.value=\"\";\r\n        let stype = document.getElementById(\"typeselect\");\r\n        stype.value=\"public\";\r\n\r\n    };\r\n    //Копировать шаблон\r\n    const CopyShablon =(id)=>{\r\n        var s_copy = Object.assign([], shablon_cards);\r\n        var i_copy = [];\r\n        var new_shablon;\r\n        for(var i = 0; i<s_copy.length; i++){\r\n            if(s_copy[i].id === id){\r\n                new_shablon = {\r\n                    id: s_copy[i].id,\r\n                    title: s_copy[i].title,\r\n                    link: s_copy[i].link,\r\n                    data: s_copy[i].data,\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        console.log(new_shablon);\r\n        //Здесь надо получить записи о вопросах данного шаблона\r\n        //из бд и запихнуть их в i_copy, после чего записать\r\n        //данные из new_shablon и i_copy в бд, если нельзя создать копию сразу на беке.\r\n        var title = document.getElementById(\"InSearch\");\r\n        ReloadCardList(title.value);\r\n    };\r\n    //Удалить шаблон //Сюда надо подкрутить удаление шаблона\r\n    const DeleteShablon =(id)=>{\r\n        console.log(\"delete - \" + id);\r\n\r\n        //Это для перезагрузки списка\r\n        var title = document.getElementById(\"InSearch\");\r\n        ReloadCardList(title.value);\r\n    };\r\n    //Копировать ссылку на шаблон - работает\r\n    const CopyLink =(link)=>{\r\n        console.log(link);\r\n        navigator.clipboard.writeText(link);\r\n    };\r\n    //Редактировать шаблон\r\n    const EditShablon =(id)=>{\r\n\r\n        setValue((prevState) => []);\r\n\r\n        //Получаем структуру из вопросов конкретного шаблона\r\n        //в виде x = [{id: 1, question_type: '', question_text: '', answer: [] }]\r\n\r\n        var x = [];\r\n        for(var j=0;j<x.length;j++){\r\n            var newitem = {\r\n                id: x[j].id,\r\n                question_type: x[j].question_type,\r\n                question_text: x[j].question_text,\r\n                answer: x[j].answer\r\n            };\r\n            setValue((prevState) => [...prevState, newitem]);\r\n        }\r\n\r\n        let title = document.getElementById('shablon_title');\r\n        title.value=\"Название\";\r\n        let stype = document.getElementById(\"typeselect\");\r\n        stype.value=\"public\";\r\n    }\r\n\r\n    //Показать результаты\r\n    const ShowResult =(id)=>{\r\n\r\n        var block_result = document.getElementById('mainp');\r\n    }\r\n\r\n    return(\r\n        <div id = \"main_block_c\">\r\n            <div id=\"block1\">\r\n                <MainButtoms \r\n                    NewShablon={NewShablon} \r\n                    List = {shablon_cards}\r\n                    CopyShablon = {CopyShablon}\r\n                    CopyLink = {CopyLink}\r\n                    EditShablon = {EditShablon}\r\n                    DeleteShablon = {DeleteShablon}\r\n                    >\r\n                </MainButtoms>\r\n            </div>\r\n            <div id=\"block2\">\r\n                <div className = \"mainp\" id = \"mainp\">\r\n                    <h1>Название</h1>\r\n                    <input type = \"text\" id = \"shablon_title\" name='Shablon_title' autoFocus={true}></input>\r\n                    <h1>Тип опроса</h1>\r\n                    <select id =\"typeselect\" name='shablontype'>\r\n                        <option value=\"public\">Публичный</option>\r\n                        <option value=\"anon\">Анонимный</option>\r\n                    </select>\r\n                        {\r\n                            items.map((item) => {\r\n                                return(\r\n                                    <QPool \r\n                                    id={item.id} \r\n                                    key={item.id}\r\n                                    type={item.question_type}\r\n                                    text={item.question_text}\r\n                                    answ={item.answer}\r\n                                    image_delete={require('../images/close.png')}\r\n                                    onDeleted={deleteitem}\r\n                                    setInfo={SetQuestion}>\r\n                                    </QPool>\r\n                                );\r\n                            })\r\n                        }\r\n                    \r\n                    <button id=\"addtask\" onClick={additem}>\r\n                        <img src={require('../images/plus.png')} alt='add'></img>\r\n                        <h1>Добавить вопрос</h1>\r\n                    </button>\r\n                    <button id=\"addtask\" onClick={SaveShablon}>\r\n                        <h1>Сохранить</h1>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n        \r\n};"],"mappings":"sPAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAOC,MAAK,KAAM,SAAS,CAC3B,OAAQC,WAAW,KAAO,eAAe,CAAC,wFAG1C,MAAO,IAAMC,IAAG,CAAG,QAANA,IAAG,EAAS,CAErB,cAA0BH,QAAQ,CAAC,CAC/B,CACII,EAAE,CAAE,CAAC,CACLC,aAAa,CAAE,OAAO,CACtBC,aAAa,CAAE,KAAK,CACpBC,MAAM,CAAE,EACZ,CAAC,CACD,CACIH,EAAE,CAAE,CAAC,CACLC,aAAa,CAAE,MAAM,CACrBC,aAAa,CAAE,WAAW,CAC1BC,MAAM,CAAE,EACZ,CAAC,CACD,CACIH,EAAE,CAAE,CAAC,CACLC,aAAa,CAAE,KAAK,CACpBC,aAAa,CAAE,KAAK,CACpBC,MAAM,CAAE,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAC1B,CAAC,CACD,CACIH,EAAE,CAAE,CAAC,CACLC,aAAa,CAAE,MAAM,CACrBC,aAAa,CAAE,OAAO,CACtBC,MAAM,CAAE,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAC/B,CAAC,CACJ,CAAC,wCAzBKC,KAAK,eAAEC,QAAQ,eA2BtB,eAAkCT,QAAQ,CAAC,CACvC,CACII,EAAE,CAAE,CAAC,CACLM,KAAK,CAAE,WAAW,CAClBC,IAAI,CAAE,kBAAkB,CACxBC,IAAI,CAAE,YACV,CAAC,CACD,CACIR,EAAE,CAAE,CAAC,CACLM,KAAK,CAAE,WAAW,CAClBC,IAAI,CAAE,kBAAkB,CACxBC,IAAI,CAAE,YACV,CAAC,CACJ,CAAC,yCAbMC,aAAa,eAAEC,OAAO,eAe9B;AACA;AACA,GAAMC,eAAc,CAAE,QAAhBA,eAAc,CAAGC,UAAU,CAAG,CAChCF,OAAO,CAAC,SAACG,SAAS,QAAK,EAAE,GAAC,CAC1B;AACA;AACA,GAAMC,MAAK,CAAG,CAAC,CAACd,EAAE,CAAC,CAAC,CAAEM,KAAK,CAAE,OAAO,CAAEC,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAE,YAAY,CAAC,CACvE,CAACR,EAAE,CAAC,CAAC,CAAEM,KAAK,CAAE,QAAQ,CAAEC,IAAI,CAAE,MAAM,CAAEC,IAAI,CAAE,YAAY,CAAC,CAAC,CAE1DM,KAAK,CAACC,GAAG,CAAC,SAACC,IAAI,CAAK,CAChBC,OAAO,CAACD,IAAI,CAAChB,EAAE,CAAEgB,IAAI,CAACV,KAAK,CAAEU,IAAI,CAACT,IAAI,CAAES,IAAI,CAACR,IAAI,CAAC,CACtD,CAAC,CAAC,CAEN,CAAC,CACD;AACA,GAAMS,QAAO,CAAG,QAAVA,QAAO,CAAIC,IAAI,CAAEC,OAAO,CAAEC,MAAM,CAAEC,MAAM,CAAK,CAE/C,GAAIC,QAAO,CAAG,CACVtB,EAAE,CAAEkB,IAAI,CACRZ,KAAK,CAAEa,OAAO,CACdZ,IAAI,CAAEa,MAAM,CACZZ,IAAI,CAAEa,MACV,CAAC,CACDX,OAAO,CAAC,SAACG,SAAS,qCAASA,SAAS,GAAES,OAAO,IAAC,CAAC,CACnD,CAAC,CAGD;AACA,GAAMC,QAAO,CAAG,QAAVA,QAAO,EAAS,CAClB,GAAIC,EAAC,CAAG,CAAC,CACT,IAAI,GAAIC,EAAC,CAAC,CAAC,CAACA,CAAC,CAACrB,KAAK,CAACsB,MAAM,CAACD,CAAC,EAAE,CAAC,CAC3B,GAAGrB,KAAK,CAACqB,CAAC,CAAC,CAACzB,EAAE,CAACwB,CAAC,CAAC,CACbA,CAAC,CAACpB,KAAK,CAACqB,CAAC,CAAC,CAACzB,EAAE,CACjB,CACJ,CACAwB,CAAC,EAAE,CACH,GAAIG,QAAO,CAAG,CACV3B,EAAE,CAAEwB,CAAC,CACLvB,aAAa,CAAE,EAAE,CACjBC,aAAa,CAAE,EAAE,CACjBC,MAAM,CAAE,EACZ,CAAC,CACDE,QAAQ,CAAC,SAACQ,SAAS,qCAASA,SAAS,GAAEc,OAAO,IAAC,CAAC,CAChD;AACA;AACJ,CAAC,CACD;AACA,GAAMC,WAAU,CAAG,QAAbA,WAAU,CAAI5B,EAAE,CAAI,CACtB,GAAI6B,MAAK,CAAGzB,KAAK,CAACsB,MAAM,CACxB,GAAGG,KAAK,CAAG,CAAC,CAAC,CACTxB,QAAQ,CAAC,SAACQ,SAAS,CAAK,CACpB,GAAMiB,IAAG,CAAGjB,SAAS,CAACkB,SAAS,CAAC,SAACC,IAAI,QAAKA,KAAI,CAAChC,EAAE,GAAKA,EAAE,GAAC,CACzD,mCAAUa,SAAS,CAACoB,KAAK,CAAC,CAAC,CAACH,GAAG,CAAC,qBAAKjB,SAAS,CAACoB,KAAK,CAACH,GAAG,CAAC,CAAC,CAAC,GAC/D,CAAC,CAAC,CACF;AACAD,KAAK,EAAE,CACX,CAAC,IACG,CACAK,KAAK,CAAC,qCAAqC,CAAC,CAChD,CAAC,CACD;AACA;AACJ,CAAC,CACD;AACA,GAAMC,YAAW,CAAG,QAAdA,YAAW,CAAInC,EAAE,CAAEoC,IAAI,CAAI,CAC7B,GAAIC,MAAK,CAAGD,IAAI,CAChB,GAAIE,MAAK,CAAE,EAAE,CACb,GAAIC,KAAI,CAAE,EAAE,CACZ,GAAIC,EAAC,CAAEf,CAAC,CACR,GAAIgB,OAAM,CAAGC,QAAQ,CAACC,iBAAiB,CAAC,gBAAgB,CAAG3C,EAAE,CAAC,CAC9D,IAAKyB,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGgB,MAAM,CAACf,MAAM,CAAED,CAAC,EAAE,CAAE,CAChCe,CAAC,CAAGC,MAAM,CAAChB,CAAC,CAAC,CACba,KAAK,CAAGE,CAAC,CAACI,KAAK,CACnB,CACA,GAAIP,KAAK,GAAK,OAAO,EAAMA,KAAK,GAAK,MAAO,CAAC,CACzCI,MAAM,CAAGC,QAAQ,CAACC,iBAAiB,CAAC,cAAc,CAAG3C,EAAE,CAAC,CACxD,IAAKyB,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGgB,MAAM,CAACf,MAAM,CAAED,CAAC,EAAE,CAAE,CAChCe,CAAC,CAAGC,MAAM,CAAChB,CAAC,CAAC,CACbc,IAAI,CAACM,IAAI,CAACL,CAAC,CAACI,KAAK,CAAC,CACtB,CACJ,CACA,GAAIE,KAAI,CAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,CAAE5C,KAAK,CAAC,CACnC,GAAI0B,IAAG,CAAGgB,IAAI,CAACf,SAAS,CAAC,SAACC,IAAI,QAAKA,KAAI,CAAChC,EAAE,GAAKA,EAAE,GAAC,CAClD,GAAI2B,QAAO,CAAC,CACR3B,EAAE,CAAEA,EAAE,CACNC,aAAa,CAAEoC,KAAK,CACpBnC,aAAa,CAAEoC,KAAK,CACpBnC,MAAM,CAAEoC,IACZ,CAAC,CACDO,IAAI,CAAChB,GAAG,CAAC,CAACH,OAAO,CACjBtB,QAAQ,CAACyC,IAAI,CAAC,CAEd;AACR;AACA,4BACI,CAAC,CACD;AACA;AACA,GAAMG,YAAW,CAAG,QAAdA,YAAW,EAAS,CACtB,GAAIC,QAAO,CAAGR,QAAQ,CAACC,iBAAiB,CAAC,eAAe,CAAC,CAACC,KAAK,CAAC;AAChE,GAAIO,OAAM,CAAGT,QAAQ,CAACC,iBAAiB,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC;AAC7D;AACA,GAAIQ,WAAU,CAAGL,MAAM,CAACC,MAAM,CAAC,EAAE,CAAE5C,KAAK,CAAC,CACzC,IAAI,GAAIoB,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAC4B,UAAU,CAAC1B,MAAM,CAAEF,CAAC,EAAE,CAAC,CACpC;AACZ;AACA;AACA,kCAHY,CAKJ6B,OAAO,CAACC,GAAG,CAAClD,KAAK,CAAC,CACtB,CAAC,CACD;AACA,GAAMmD,WAAU,CAAE,QAAZA,WAAU,EAAM,CAElBlD,QAAQ,CAAC,SAACQ,SAAS,QAAK,EAAE,GAAC,CAC3B,GAAIP,MAAK,CAAGoC,QAAQ,CAACc,cAAc,CAAC,eAAe,CAAC,CACpDlD,KAAK,CAACsC,KAAK,CAAC,EAAE,CACd,GAAIa,MAAK,CAAGf,QAAQ,CAACc,cAAc,CAAC,YAAY,CAAC,CACjDC,KAAK,CAACb,KAAK,CAAC,QAAQ,CAExB,CAAC,CACD;AACA,GAAMc,YAAW,CAAE,QAAbA,YAAW,CAAG1D,EAAE,CAAG,CACrB,GAAI2D,OAAM,CAAGZ,MAAM,CAACC,MAAM,CAAC,EAAE,CAAEvC,aAAa,CAAC,CAC7C,GAAImD,OAAM,CAAG,EAAE,CACf,GAAIC,YAAW,CACf,IAAI,GAAIrC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAACmC,MAAM,CAACjC,MAAM,CAAEF,CAAC,EAAE,CAAC,CAChC,GAAGmC,MAAM,CAACnC,CAAC,CAAC,CAACxB,EAAE,GAAKA,EAAE,CAAC,CACnB6D,WAAW,CAAG,CACV7D,EAAE,CAAE2D,MAAM,CAACnC,CAAC,CAAC,CAACxB,EAAE,CAChBM,KAAK,CAAEqD,MAAM,CAACnC,CAAC,CAAC,CAAClB,KAAK,CACtBC,IAAI,CAAEoD,MAAM,CAACnC,CAAC,CAAC,CAACjB,IAAI,CACpBC,IAAI,CAAEmD,MAAM,CAACnC,CAAC,CAAC,CAAChB,IACpB,CAAC,CACD,MACJ,CACJ,CACA6C,OAAO,CAACC,GAAG,CAACO,WAAW,CAAC,CACxB;AACA;AACA;AACA,GAAIvD,MAAK,CAAGoC,QAAQ,CAACc,cAAc,CAAC,UAAU,CAAC,CAC/C7C,cAAc,CAACL,KAAK,CAACsC,KAAK,CAAC,CAC/B,CAAC,CACD;AACA,GAAMkB,cAAa,CAAE,QAAfA,cAAa,CAAG9D,EAAE,CAAG,CACvBqD,OAAO,CAACC,GAAG,CAAC,WAAW,CAAGtD,EAAE,CAAC,CAE7B;AACA,GAAIM,MAAK,CAAGoC,QAAQ,CAACc,cAAc,CAAC,UAAU,CAAC,CAC/C7C,cAAc,CAACL,KAAK,CAACsC,KAAK,CAAC,CAC/B,CAAC,CACD;AACA,GAAMmB,SAAQ,CAAE,QAAVA,SAAQ,CAAGxD,IAAI,CAAG,CACpB8C,OAAO,CAACC,GAAG,CAAC/C,IAAI,CAAC,CACjByD,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC3D,IAAI,CAAC,CACvC,CAAC,CACD;AACA,GAAM4D,YAAW,CAAE,QAAbA,YAAW,CAAGnE,EAAE,CAAG,CAErBK,QAAQ,CAAC,SAACQ,SAAS,QAAK,EAAE,GAAC,CAE3B;AACA;AAEA,GAAIuD,EAAC,CAAG,EAAE,CACV,IAAI,GAAI3C,EAAC,CAAC,CAAC,CAACA,CAAC,CAAC2C,CAAC,CAAC1C,MAAM,CAACD,CAAC,EAAE,CAAC,CACvB,GAAIE,QAAO,CAAG,CACV3B,EAAE,CAAEoE,CAAC,CAAC3C,CAAC,CAAC,CAACzB,EAAE,CACXC,aAAa,CAAEmE,CAAC,CAAC3C,CAAC,CAAC,CAACxB,aAAa,CACjCC,aAAa,CAAEkE,CAAC,CAAC3C,CAAC,CAAC,CAACvB,aAAa,CACjCC,MAAM,CAAEiE,CAAC,CAAC3C,CAAC,CAAC,CAACtB,MACjB,CAAC,CACDE,QAAQ,CAAC,SAACQ,SAAS,qCAASA,SAAS,GAAEc,OAAO,IAAC,CAAC,CACpD,CAEA,GAAIrB,MAAK,CAAGoC,QAAQ,CAACc,cAAc,CAAC,eAAe,CAAC,CACpDlD,KAAK,CAACsC,KAAK,CAAC,UAAU,CACtB,GAAIa,MAAK,CAAGf,QAAQ,CAACc,cAAc,CAAC,YAAY,CAAC,CACjDC,KAAK,CAACb,KAAK,CAAC,QAAQ,CACxB,CAAC,CAED;AACA,GAAMyB,WAAU,CAAE,QAAZA,WAAU,CAAGrE,EAAE,CAAG,CAEpB,GAAIsE,aAAY,CAAG5B,QAAQ,CAACc,cAAc,CAAC,OAAO,CAAC,CACvD,CAAC,CAED,mBACI,aAAK,EAAE,CAAG,cAAc,wBACpB,YAAK,EAAE,CAAC,QAAQ,uBACZ,KAAC,WAAW,EACR,UAAU,CAAED,UAAW,CACvB,IAAI,CAAI9C,aAAc,CACtB,WAAW,CAAIiD,WAAY,CAC3B,QAAQ,CAAIK,QAAS,CACrB,WAAW,CAAII,WAAY,CAC3B,aAAa,CAAIL,aAAc,EAErB,EACZ,cACN,YAAK,EAAE,CAAC,QAAQ,uBACZ,aAAK,SAAS,CAAG,OAAO,CAAC,EAAE,CAAG,OAAO,wBACjC,oBAAI,kDAAQ,EAAK,cACjB,cAAO,IAAI,CAAG,MAAM,CAAC,EAAE,CAAG,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAE,IAAK,EAAS,cACxF,oBAAI,yDAAU,EAAK,cACnB,gBAAQ,EAAE,CAAE,YAAY,CAAC,IAAI,CAAC,aAAa,wBACvC,eAAQ,KAAK,CAAC,QAAQ,UAAC,wDAAS,EAAS,cACzC,eAAQ,KAAK,CAAC,MAAM,UAAC,wDAAS,EAAS,GAClC,CAED1D,KAAK,CAACW,GAAG,CAAC,SAACiB,IAAI,CAAK,CAChB,mBACI,KAAC,KAAK,EACN,EAAE,CAAEA,IAAI,CAAChC,EAAG,CAEZ,IAAI,CAAEgC,IAAI,CAAC/B,aAAc,CACzB,IAAI,CAAE+B,IAAI,CAAC9B,aAAc,CACzB,IAAI,CAAE8B,IAAI,CAAC7B,MAAO,CAClB,YAAY,CAAEoE,OAAO,CAAC,qBAAqB,CAAE,CAC7C,SAAS,CAAE3C,UAAW,CACtB,OAAO,CAAEO,WAAY,EANhBH,IAAI,CAAChC,EAAE,CAOJ,CAEhB,CAAC,CAAC,cAGV,gBAAQ,EAAE,CAAC,SAAS,CAAC,OAAO,CAAEuB,OAAQ,wBAClC,YAAK,GAAG,CAAEgD,OAAO,CAAC,oBAAoB,CAAE,CAAC,GAAG,CAAC,KAAK,EAAO,cACzD,oBAAI,uFAAe,EAAK,GACnB,cACT,eAAQ,EAAE,CAAC,SAAS,CAAC,OAAO,CAAEtB,WAAY,uBACtC,oBAAI,wDAAS,EAAK,EACb,GACP,EACJ,GACJ,CAGd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}