{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iliab\\\\Desktop\\\\vkrproject\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QPool from './qpoll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  let i = 0;\n  const [items, setValue] = useState([{\n    id: 0,\n    question_type: '',\n    question_text: '',\n    answer: []\n  }]);\n  const additem = () => {\n    i += 1;\n    var newitem = {\n      id: i,\n      question_type: '',\n      question_text: '',\n      answer: []\n    };\n    setValue(prevState => [...prevState, newitem]);\n    //Вывод для проверки\n    //console.log(i);\n  };\n\n  const deleteitem = id => {\n    var count = items.length;\n    if (count > 1) {\n      setValue(prevState => {\n        const idx = prevState.findIndex(item => item.id === id);\n        return [...prevState.slice(0, idx), ...prevState.slice(idx + 1)];\n      });\n      //Для проверки\n      count--;\n    } else {\n      alert('Нельзя удалить единственный вопрос!');\n    }\n    ;\n    //Для проверки\n    //console.log(count);\n  };\n\n  const SetQuestion = (id, type) => {\n    var qtype = type;\n    var qtext = '';\n    var qans = [];\n    var inputs = document.getElementsByName('question_area_' + id);\n    for (var j = 0; j < inputs.length; j++) {\n      var a = inputs[j];\n      qtext = a.value;\n    }\n    if (qtype != 'short' || qtype != 'long') {\n      var inputs = document.getElementsByName('answer_area_' + id);\n      for (var j = 0; j < inputs.length; j++) {\n        var a = inputs[j];\n        qans.push(a.value);\n      }\n    }\n    var copy = Object.assign([], items);\n    var newitem = {\n      id: id,\n      question_type: qtype,\n      question_text: qtext,\n      answer: qans\n    };\n    setValue(copy);\n    /*setValue((prevState) => {\r\n        const idx = prevState.findIndex((item) => item.id === id);\r\n        const oldanswer = prevState[idx];\r\n        const newanswer = {...oldanswer, question_type: qtype, question_text: qtext, answer: qans};\r\n        if(idx===0){\r\n            return[newanswer,...prevState.slice(idx+1)];\r\n        }\r\n        else{\r\n            return[...prevState.slice(0,idx), newanswer,...prevState.slice(idx+1)];\r\n        }\r\n    });*/\n    console.log(qtype);\n    console.log(qtext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"shablon_title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"logoselect\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"OKB\",\n        children: \"OKB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"QWE\",\n        children: \"QWE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), items.map(item => {\n      return /*#__PURE__*/_jsxDEV(QPool, {\n        id: item.id,\n        qtype: item.question_type,\n        qtext: item.question_text,\n        ans: item.answer,\n        image_delete: require('../images/close.png'),\n        onDeleted: deleteitem,\n        setInfo: SetQuestion\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addtask\",\n      onClick: additem,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../images/plus.png'),\n        alt: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addtask\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"6LonICQZDyeEX/2sU1Oc/G6440w=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QPool","App","i","items","setValue","id","question_type","question_text","answer","additem","newitem","prevState","deleteitem","count","length","idx","findIndex","item","slice","alert","SetQuestion","type","qtype","qtext","qans","inputs","document","getElementsByName","j","a","value","push","copy","Object","assign","console","log","map","require"],"sources":["C:/Users/iliab/Desktop/vkrproject/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QPool from './qpoll';\r\n\r\n\r\nexport const App = () => {\r\n\r\n    let i =0;\r\n    const [items, setValue] = useState([{\r\n        id: 0,\r\n        question_type: '',\r\n        question_text: '',\r\n        answer: []        \r\n    }]);\r\n\r\n    const additem = () => {\r\n        i += 1;\r\n        var newitem = {\r\n            id: i,\r\n            question_type: '',\r\n            question_text: '',\r\n            answer: []\r\n        };\r\n        setValue((prevState) => [...prevState, newitem]);\r\n        //Вывод для проверки\r\n        //console.log(i);\r\n    };\r\n    const deleteitem = (id) =>{\r\n        var count = items.length;\r\n        if(count > 1){\r\n            setValue((prevState) => {\r\n                const idx = prevState.findIndex((item) => item.id === id);\r\n                return[...prevState.slice(0,idx), ...prevState.slice(idx+1)];\r\n            });\r\n            //Для проверки\r\n            count--;\r\n        } \r\n        else{ \r\n            alert('Нельзя удалить единственный вопрос!');\r\n        };\r\n        //Для проверки\r\n        //console.log(count);\r\n    };\r\n    const SetQuestion = (id, type) =>{\r\n        var qtype = type;\r\n        var qtext ='';\r\n        var qans =[];\r\n        var inputs = document.getElementsByName('question_area_' + id);\r\n        for (var j = 0; j < inputs.length; j++) {\r\n            var a = inputs[j];\r\n            qtext = a.value;\r\n        }\r\n        if((qtype != 'short') || (qtype != 'long')){\r\n            var inputs = document.getElementsByName('answer_area_' + id);\r\n            for (var j = 0; j < inputs.length; j++) {\r\n                var a = inputs[j];\r\n                qans.push(a.value);\r\n            }\r\n        }\r\n        var copy = Object.assign([], items);\r\n        var newitem={\r\n            id: id,\r\n            question_type: qtype,\r\n            question_text: qtext,\r\n            answer: qans\r\n        };\r\n        setValue(copy);\r\n        /*setValue((prevState) => {\r\n            const idx = prevState.findIndex((item) => item.id === id);\r\n            const oldanswer = prevState[idx];\r\n            const newanswer = {...oldanswer, question_type: qtype, question_text: qtext, answer: qans};\r\n            if(idx===0){\r\n                return[newanswer,...prevState.slice(idx+1)];\r\n            }\r\n            else{\r\n                return[...prevState.slice(0,idx), newanswer,...prevState.slice(idx+1)];\r\n            }\r\n        });*/\r\n        console.log(qtype);\r\n        console.log(qtext);\r\n    };\r\n\r\n\r\n    return(\r\n        <div className = \"mainp\">\r\n            <h1>Название</h1>\r\n            <input type = \"text\" id = \"shablon_title\"></input>\r\n            <h1>Выберите логотип компании</h1>\r\n            <select id =\"logoselect\">\r\n                <option value=\"OKB\">OKB</option>\r\n                <option value=\"QWE\">QWE</option>\r\n            </select>\r\n\r\n                {\r\n                    items.map((item) => {\r\n                        return(\r\n                            <QPool \r\n                            key={item.id} \r\n                            id={item.id} \r\n                            qtype={item.question_type} \r\n                            qtext={item.question_text}\r\n                            ans={item.answer}\r\n                            image_delete={require('../images/close.png')}\r\n                            onDeleted={deleteitem}\r\n                            setInfo={SetQuestion}>\r\n                            </QPool>\r\n                        );\r\n                    })\r\n                }\r\n            \r\n            <button id=\"addtask\" onClick={additem}>\r\n                <img src={require('../images/plus.png')} alt='add'></img>\r\n                <h1>Добавить вопрос</h1>\r\n            </button>\r\n            <button id=\"addtask\">\r\n                <h1>Сохранить</h1>\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}