{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iliab\\\\Desktop\\\\vkrproject\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QPool from './qpoll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  //let i =0;\n  const [items, setValue] = useState([{\n    id: 0,\n    question_type: '',\n    question_text: '',\n    answer: []\n  }]);\n\n  //Добавляем вопрос\n  const additem = () => {\n    let i = 0;\n    for (var j = 0; j < items.length; j++) {\n      if (items[j].id > i) {\n        i = items[j].id;\n      }\n    }\n    i++;\n    var newitem = {\n      id: i,\n      question_type: '',\n      question_text: '',\n      answer: []\n    };\n    setValue(prevState => [...prevState, newitem]);\n    //Вывод для проверки\n    console.log(i);\n  };\n  //Удаляем вопрос\n  const deleteitem = id => {\n    var count = items.length;\n    if (count > 1) {\n      setValue(prevState => {\n        const idx = prevState.findIndex(item => item.id === id);\n        return [...prevState.slice(0, idx), ...prevState.slice(idx + 1)];\n      });\n      //Для проверки\n      count--;\n    } else {\n      alert('Нельзя удалить единственный вопрос!');\n    }\n    ;\n    //Для проверки\n    //console.log(count);\n  };\n  //Получаем текст и варианты ответов на вопросы\n  const SetQuestion = (id, type) => {\n    var qtype = type;\n    var qtext = '';\n    var qans = [];\n    var a, j;\n    var inputs = document.getElementsByName('question_area_' + id);\n    for (j = 0; j < inputs.length; j++) {\n      a = inputs[j];\n      qtext = a.value;\n    }\n    if (qtype !== 'short' || qtype !== 'long') {\n      inputs = document.getElementsByName('answer_area_' + id);\n      for (j = 0; j < inputs.length; j++) {\n        a = inputs[j];\n        qans.push(a.value);\n      }\n    }\n    var copy = Object.assign([], items);\n    var idx = copy.findIndex(item => item.id === id);\n    var newitem = {\n      id: id,\n      question_type: qtype,\n      question_text: qtext,\n      answer: qans\n    };\n    copy[idx] = newitem;\n    setValue(copy);\n    /*setValue((prevState) => {\r\n        const idx = prevState.findIndex((item) => item.id === id);\r\n        const oldanswer = prevState[idx];\r\n        const newanswer = {...oldanswer, question_type: qtype, question_text: qtext, answer: qans};\r\n        if(idx===0){\r\n            return[newanswer,...prevState.slice(idx+1)];\r\n        }\r\n        else{\r\n            return[...prevState.slice(0,idx), newanswer,...prevState.slice(idx+1)];\r\n        }\r\n    });*/\n    console.log(qtype);\n    console.log(qtext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainp\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"shablon_title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"logoselect\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"OKB\",\n        children: \"OKB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"QWE\",\n        children: \"QWE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), items.map(item => {\n      return /*#__PURE__*/_jsxDEV(QPool, {\n        id: item.id,\n        image_delete: require('../images/close.png'),\n        onDeleted: deleteitem,\n        setInfo: SetQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addtask\",\n      onClick: additem,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../images/plus.png'),\n        alt: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addtask\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"6LonICQZDyeEX/2sU1Oc/G6440w=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QPool","App","items","setValue","id","question_type","question_text","answer","additem","i","j","length","newitem","prevState","console","log","deleteitem","count","idx","findIndex","item","slice","alert","SetQuestion","type","qtype","qtext","qans","a","inputs","document","getElementsByName","value","push","copy","Object","assign","map","require"],"sources":["C:/Users/iliab/Desktop/vkrproject/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport QPool from './qpoll';\r\n\r\n\r\nexport const App = () => {\r\n\r\n    //let i =0;\r\n    const [items, setValue] = useState([{\r\n        id: 0,\r\n        question_type: '',\r\n        question_text: '',\r\n        answer: []        \r\n    }]);\r\n\r\n    //Добавляем вопрос\r\n    const additem = () => {\r\n        let i = 0;\r\n        for(var j=0;j<items.length;j++){\r\n            if(items[j].id>i){\r\n                i=items[j].id;\r\n            }\r\n        }\r\n        i++;\r\n        var newitem = {\r\n            id: i,\r\n            question_type: '',\r\n            question_text: '',\r\n            answer: []\r\n        };\r\n        setValue((prevState) => [...prevState, newitem]);\r\n        //Вывод для проверки\r\n        console.log(i);\r\n    };\r\n    //Удаляем вопрос\r\n    const deleteitem = (id) =>{\r\n        var count = items.length;\r\n        if(count > 1){\r\n            setValue((prevState) => {\r\n                const idx = prevState.findIndex((item) => item.id === id);\r\n                return[...prevState.slice(0,idx), ...prevState.slice(idx+1)];\r\n            });\r\n            //Для проверки\r\n            count--;\r\n        } \r\n        else{ \r\n            alert('Нельзя удалить единственный вопрос!');\r\n        };\r\n        //Для проверки\r\n        //console.log(count);\r\n    };\r\n    //Получаем текст и варианты ответов на вопросы\r\n    const SetQuestion = (id, type) =>{\r\n        var qtype = type;\r\n        var qtext ='';\r\n        var qans =[];\r\n        var a, j;\r\n        var inputs = document.getElementsByName('question_area_' + id);\r\n        for (j = 0; j < inputs.length; j++) {\r\n            a = inputs[j];\r\n            qtext = a.value;\r\n        }\r\n        if((qtype !== 'short') || (qtype !== 'long')){\r\n            inputs = document.getElementsByName('answer_area_' + id);\r\n            for (j = 0; j < inputs.length; j++) {\r\n                a = inputs[j];\r\n                qans.push(a.value);\r\n            }\r\n        }\r\n        var copy = Object.assign([], items);\r\n        var idx = copy.findIndex((item) => item.id === id);\r\n        var newitem={\r\n            id: id,\r\n            question_type: qtype,\r\n            question_text: qtext,\r\n            answer: qans\r\n        };\r\n        copy[idx]=newitem;\r\n        setValue(copy);\r\n        /*setValue((prevState) => {\r\n            const idx = prevState.findIndex((item) => item.id === id);\r\n            const oldanswer = prevState[idx];\r\n            const newanswer = {...oldanswer, question_type: qtype, question_text: qtext, answer: qans};\r\n            if(idx===0){\r\n                return[newanswer,...prevState.slice(idx+1)];\r\n            }\r\n            else{\r\n                return[...prevState.slice(0,idx), newanswer,...prevState.slice(idx+1)];\r\n            }\r\n        });*/\r\n        console.log(qtype);\r\n        console.log(qtext);\r\n    };\r\n\r\n\r\n    return(\r\n        <div className = \"mainp\">\r\n            <h1>Название</h1>\r\n            <input type = \"text\" id = \"shablon_title\"></input>\r\n            <h1>Выберите логотип компании</h1>\r\n            <select id =\"logoselect\">\r\n                <option value=\"OKB\">OKB</option>\r\n                <option value=\"QWE\">QWE</option>\r\n            </select>\r\n\r\n                {\r\n                    items.map((item) => {\r\n                        return(\r\n                            <QPool \r\n                            id={item.id} \r\n                            image_delete={require('../images/close.png')}\r\n                            onDeleted={deleteitem}\r\n                            setInfo={SetQuestion}>\r\n                            </QPool>\r\n                        );\r\n                    })\r\n                }\r\n            \r\n            <button id=\"addtask\" onClick={additem}>\r\n                <img src={require('../images/plus.png')} alt='add'></img>\r\n                <h1>Добавить вопрос</h1>\r\n            </button>\r\n            <button id=\"addtask\">\r\n                <h1>Сохранить</h1>\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}