{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iliab\\\\Desktop\\\\vkrproject\\\\src\\\\components\\\\ShablonApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Question_short } from './Question_short';\nimport { Question_long } from './Question_long';\nimport { Question_one } from './Question_one';\nimport { Question_many } from './Question_many';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShablonApp = () => {\n  _s();\n  //Надо сделать метод для заполнения массива items в таком формате.\n  const [items, setQuestion] = useState([{\n    id: 0,\n    question_type: 'short',\n    question_text: 'Текст вопроса 1',\n    answer: []\n  }, {\n    id: 1,\n    question_type: 'long',\n    question_text: 'Текст вопроса 2',\n    answer: []\n  }, {\n    id: 2,\n    question_type: 'one',\n    question_text: 'Текст вопроса 3',\n    answer: ['Ответ 1', 'Ответ 2', 'Ответ 3', 'Ответ 4']\n  }, {\n    id: 3,\n    question_type: 'many',\n    question_text: 'Текст вопроса 4',\n    answer: ['Ответ 1', 'Ответ 2', 'Ответ 3']\n  }]);\n\n  //Добавить запись в бд\n  const SendAnswers = () => {\n    var i_copy = Object.assign([], items);\n    //В answers хранятся ответы на вопросы в формате {id: n, answ: ['1', 'a', '1a']}.\n    var answers = [];\n    for (var i = 0; i < i_copy.length; i++) {\n      switch (i_copy[i].question_type) {\n        case 'short':\n          var ans = document.getElementsByName('short' + i_copy[i].id);\n          var b = [],\n            id_t = i_copy[i].id;\n          for (var j = 0; j < ans.length; j++) {\n            b.push(ans[j].value);\n          }\n          if (b.length === 0) {\n            alert(\"Вы не ответили на все вопросы!\");\n            return;\n          }\n          answers.push({\n            id: id_t,\n            answ: b\n          });\n          break;\n        case 'long':\n          var ans = document.getElementsByName('long' + i_copy[i].id);\n          var b = [],\n            id_t = i_copy[i].id;\n          for (var j = 0; j < ans.length; j++) {\n            b.push(ans[j].value);\n          }\n          if (b.length === 0) {\n            alert(\"Вы не ответили на все вопросы!\");\n            return;\n          }\n          answers.push({\n            id: id_t,\n            answ: b\n          });\n          break;\n        case 'one':\n          var ans = document.getElementsByName('one' + i_copy[i].id);\n          var b = [],\n            id_t = i_copy[i].id;\n          for (var j = 0; j < ans.length; j++) {\n            if (ans[j].checked == true) {\n              b.push(ans[j].value);\n            }\n          }\n          if (b.length === 0) {\n            alert(\"Вы не ответили на все вопросы!\");\n            return;\n          }\n          answers.push({\n            id: id_t,\n            answ: b\n          });\n          break;\n        case 'many':\n          var ans = document.getElementsByName('many' + i_copy[i].id);\n          var b = [],\n            id_t = i_copy[i].id;\n          for (var j = 0; j < ans.length; j++) {\n            if (ans[j].checked === true) {\n              b.push(ans[j].value);\n            }\n          }\n          if (b.length === 0) {\n            alert(\"Вы не ответили на все вопросы!\");\n            return;\n          }\n          answers.push({\n            id: id_t,\n            answ: b\n          });\n          break;\n      }\n    }\n    //Сюда надо добавить функционал для добавления ответов в БД.\n    console.log(answers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main_block_c\",\n    children: [items.map(item => {\n      switch (item.question_type) {\n        case 'short':\n          return /*#__PURE__*/_jsxDEV(Question_short, {\n            uid: item.id,\n            q_text: item.question_text\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 32\n          }, this);\n        case 'long':\n          return /*#__PURE__*/_jsxDEV(Question_long, {\n            uid: item.id,\n            q_text: item.question_text\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 32\n          }, this);\n        case 'one':\n          return /*#__PURE__*/_jsxDEV(Question_one, {\n            uid: item.id,\n            q_text: item.question_text,\n            ans: item.answer\n          }, item.id + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 32\n          }, this);\n        case 'many':\n          return /*#__PURE__*/_jsxDEV(Question_many, {\n            uid: item.id,\n            q_text: item.question_text,\n            ans: item.answer\n          }, item.id + 2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 32\n          }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addtask\",\n      onClick: () => SendAnswers(),\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(ShablonApp, \"aGeBgVVUeb/ljb3q+6QDDPwsw44=\");\n_c = ShablonApp;\nvar _c;\n$RefreshReg$(_c, \"ShablonApp\");","map":{"version":3,"names":["React","useState","Question_short","Question_long","Question_one","Question_many","ShablonApp","items","setQuestion","id","question_type","question_text","answer","SendAnswers","i_copy","Object","assign","answers","i","length","ans","document","getElementsByName","b","id_t","j","push","value","alert","answ","checked","console","log","map","item"],"sources":["C:/Users/iliab/Desktop/vkrproject/src/components/ShablonApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Question_short } from './Question_short';\r\nimport { Question_long } from './Question_long';\r\nimport { Question_one } from './Question_one';\r\nimport { Question_many } from './Question_many';\r\n\r\nexport const ShablonApp = () => {\r\n\r\n    //Надо сделать метод для заполнения массива items в таком формате.\r\n    const [items, setQuestion] = useState([{\r\n        id: 0,\r\n        question_type: 'short',\r\n        question_text: 'Текст вопроса 1',\r\n        answer: []\r\n    },\r\n    {\r\n        id: 1,\r\n        question_type: 'long',\r\n        question_text: 'Текст вопроса 2',\r\n        answer: []\r\n    },\r\n    {\r\n        id: 2,\r\n        question_type: 'one',\r\n        question_text: 'Текст вопроса 3',\r\n        answer: ['Ответ 1', 'Ответ 2','Ответ 3','Ответ 4']\r\n    },\r\n    {\r\n        id: 3,\r\n        question_type: 'many',\r\n        question_text: 'Текст вопроса 4',\r\n        answer: ['Ответ 1', 'Ответ 2','Ответ 3']\r\n    }\r\n    ]);\r\n\r\n    //Добавить запись в бд\r\n    const SendAnswers = () => {\r\n        var i_copy = Object.assign([], items);\r\n        //В answers хранятся ответы на вопросы в формате {id: n, answ: ['1', 'a', '1a']}.\r\n        var answers = [];\r\n\r\n        for(var i = 0; i<i_copy.length; i++){\r\n            switch(i_copy[i].question_type){\r\n                case 'short':\r\n                    var ans = document.getElementsByName('short' + i_copy[i].id);\r\n                    var b = [], id_t = i_copy[i].id;\r\n                    for(var j = 0; j < ans.length; j++){\r\n                        b.push(ans[j].value);\r\n                    }\r\n                    if(b.length === 0){\r\n                        alert(\"Вы не ответили на все вопросы!\");\r\n                        return;\r\n                    }\r\n                    answers.push({id: id_t, answ: b});\r\n                break;\r\n                case 'long':\r\n                    var ans = document.getElementsByName('long' + i_copy[i].id);\r\n                    var b = [], id_t = i_copy[i].id;\r\n                    for(var j = 0; j < ans.length; j++){\r\n                        b.push(ans[j].value);\r\n                    }\r\n                    if(b.length === 0){\r\n                        alert(\"Вы не ответили на все вопросы!\");\r\n                        return;\r\n                    }\r\n                    answers.push({id: id_t, answ: b});\r\n                break;\r\n                case 'one':\r\n                    var ans = document.getElementsByName('one' + i_copy[i].id);\r\n                    var b = [], id_t = i_copy[i].id;\r\n                    for(var j = 0; j < ans.length; j++){\r\n                        if(ans[j].checked == true){\r\n                            b.push(ans[j].value);\r\n                        }\r\n                    }\r\n                    if(b.length === 0){\r\n                        alert(\"Вы не ответили на все вопросы!\");\r\n                        return;\r\n                    }\r\n                    answers.push({id: id_t, answ: b});\r\n                break;\r\n                case 'many':\r\n                    var ans = document.getElementsByName('many' + i_copy[i].id);\r\n                    var b = [], id_t = i_copy[i].id;\r\n                    for(var j = 0; j < ans.length; j++){\r\n                        if(ans[j].checked === true){\r\n                            b.push(ans[j].value);\r\n                        }\r\n                    }\r\n                    if(b.length === 0){\r\n                        alert(\"Вы не ответили на все вопросы!\");\r\n                        return;\r\n                    }\r\n                    answers.push({id: id_t, answ: b});\r\n                break;\r\n            }\r\n        }\r\n        //Сюда надо добавить функционал для добавления ответов в БД.\r\n        console.log(answers);\r\n    };\r\n        \r\n    return(\r\n        <div id = \"main_block_c\">\r\n            \r\n            {\r\n                items.map((item) => {\r\n                    switch(item.question_type){\r\n                        case 'short':\r\n                        return(<Question_short\r\n                            uid = {item.id}\r\n                            q_text = {item.question_text}\r\n                            key = {item.id}\r\n                        ></Question_short>);\r\n\r\n                        case 'long':\r\n                        return(<Question_long\r\n                            uid = {item.id}\r\n                            q_text = {item.question_text}\r\n                            key = {item.id}\r\n                        ></Question_long>);\r\n                        \r\n                        case 'one':\r\n                        return(<Question_one\r\n                            uid = {item.id}\r\n                            q_text = {item.question_text}\r\n                            ans = {item.answer}\r\n                            key = {item.id + 1}\r\n                        ></Question_one>);\r\n                        \r\n                        case 'many':\r\n                        return(<Question_many\r\n                            uid = {item.id}\r\n                            q_text = {item.question_text}\r\n                            ans = {item.answer}\r\n                            key = {item.id + 2}\r\n                        ></Question_many>);\r\n                    }\r\n                })\r\n            }\r\n\r\n            <button id=\"addtask\" onClick={() => SendAnswers()}><h1>Отправить ответ</h1></button>\r\n        </div>\r\n    );\r\n    \r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}